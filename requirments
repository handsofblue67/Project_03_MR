CNS 2420 Object-Oriented Data Structures Program 3 – Stack and Queue
Objective: Practice implementing Linked stack and linked queue.

Description
Write a program in C++ to implement these two data structures dynamically. 
The program should define a class Stack and a class Queue. The class Stack
contains the methods Stack(), push() and pop() and a pointer top. The class
Queue contains the methods append() , serve() and two pointers front and rear.
None of these classes have a count to handle underflow case and these data
structures can grow as long as they need.  Write the appropriate codes to
implement these operations.  Make sure you handle the underflow case. At the
end of the program print the contents of each data structure formatted like the
sample output.

Order of Operation
1. Instantiate the objects of stack and queue. The constructors should initialize the top, front and rear.
2. Read a record from the data file
3. parse (interpret) the command from the file with it’s associated data from the file
4. perform the command with the appropriate data from the file 
5. output the appropriate info to the screen 
6. continue steps 2 through 5 until every record in the file is processed. 
7. close the file 
8. print the contents of both data structure stack and queue 
9. end the program gracefully

Example Input File Format
The data file is a text file.  Each line of the data file contains a string opcode 
or a string opcode and an integer data.  
Here is an example of the contents of the data file:

push 10 
push 35 
push 50 
append 100 
pop 
push 15 
pop 
serve 
serve 
append 200

Example Output
Operation Stack value  
Result push    stack 10 success 
push    stack 35 success 
push    stack 50 success 
append     queue 100   success 
pop    stack --- success 
push    stack 15 success 
pop    stack --- success 
serve    queue 100   success 
serve     queue ---   underflow 
append    queue 200   success

Stack 
35 
10 

Queue 
200
 
Your program should be flexible to read data from any data filename 
given by the user. Do not hard code the data filename.
